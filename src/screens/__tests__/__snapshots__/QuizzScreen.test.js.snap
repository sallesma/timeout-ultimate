// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<QuizzScreen /> renders correctly 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "paddingBottom": 64,
    }
  }
  style={
    {
      "flex": 1,
      "padding": 16,
    }
  }
>
  <View>
    <View
      style={
        {
          "marginBottom": 16,
        }
      }
    >
      <View>
        <Text
          style={
            {
              "fontSize": 16,
              "marginBottom": 16,
            }
          }
        >
          Quand est-ce que le disque est dit « mort » ? (plusieurs réponses possibles)
        </Text>
        <View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "marginBottom": 8,
                  "padding": 8,
                },
                {
                  "backgroundColor": "#cddff3",
                },
                false,
              ]
            }
          >
            <View
              accessibilityLiveRegion="polite"
              accessibilityRole="checkbox"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": false,
                  "disabled": true,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "overflow": "hidden",
                  },
                  {
                    "borderRadius": 18,
                    "padding": 6,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "opacity": 0,
                  }
                }
              >
                <Text />
              </View>
            </View>
            <Text
              style={
                {
                  "flex": 1,
                  "flexWrap": "wrap",
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              a
              . 
              Après le début d’un point, jusqu’à ce que le « pull » soit effectué
            </Text>
          </View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "marginBottom": 8,
                  "padding": 8,
                },
                {
                  "backgroundColor": "#F4C8A2",
                },
                false,
              ]
            }
          >
            <View
              accessibilityLiveRegion="polite"
              accessibilityRole="checkbox"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": false,
                  "disabled": true,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "overflow": "hidden",
                  },
                  {
                    "borderRadius": 18,
                    "padding": 6,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "opacity": 0,
                  }
                }
              >
                <Text />
              </View>
            </View>
            <Text
              style={
                {
                  "flex": 1,
                  "flexWrap": "wrap",
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              b
              . 
              Après le « pull » ou après un « turnover » quand le disque doit être amené à l’endroit où le point pivot doit être établi, jusqu’à ce qu’un pivot soit établi
            </Text>
          </View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "marginBottom": 8,
                  "padding": 8,
                },
                {
                  "backgroundColor": "#f8f99c",
                },
                false,
              ]
            }
          >
            <View
              accessibilityLiveRegion="polite"
              accessibilityRole="checkbox"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": false,
                  "disabled": true,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "overflow": "hidden",
                  },
                  {
                    "borderRadius": 18,
                    "padding": 6,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "opacity": 0,
                  }
                }
              >
                <Text />
              </View>
            </View>
            <Text
              style={
                {
                  "flex": 1,
                  "flexWrap": "wrap",
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              c
              . 
              Après un « call » qui arrête le jeu ou n’importe quel autre arrêt jusqu’à ce que le disque soit « checké »
            </Text>
          </View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "marginBottom": 8,
                  "padding": 8,
                },
                {
                  "backgroundColor": "#e5c9e5",
                },
                false,
              ]
            }
          >
            <View
              accessibilityLiveRegion="polite"
              accessibilityRole="checkbox"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": false,
                  "disabled": true,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "overflow": "hidden",
                  },
                  {
                    "borderRadius": 18,
                    "padding": 6,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "opacity": 0,
                  }
                }
              >
                <Text />
              </View>
            </View>
            <Text
              style={
                {
                  "flex": 1,
                  "flexWrap": "wrap",
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              d
              . 
              Après que le disque touche le sol jusqu’à ce que la possession soit établie par l’équipe appropriée.
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="progressbar"
          accessibilityState={
            {
              "busy": true,
            }
          }
          accessibilityValue={
            {
              "max": 100,
              "min": 0,
              "now": 0,
            }
          }
          accessible={true}
          onLayout={[Function]}
          style={false}
          testID="progress-bar"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "#f2fcfc",
                "height": 4,
                "marginVertical": 10,
                "opacity": 0,
                "overflow": "hidden",
              }
            }
          />
        </View>
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "rgba(103, 80, 164, 1)",
              "borderRadius": 20,
              "marginTop": 8,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 0,
            }
          }
          testID="button-container-outer-layer"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "rgba(103, 80, 164, 1)",
                "borderColor": "transparent",
                "borderRadius": 20,
                "borderStyle": "solid",
                "borderWidth": 0,
                "flex": undefined,
                "minWidth": 64,
                "shadowColor": "#000",
                "shadowOffset": {
                  "height": 0,
                  "width": 0,
                },
                "shadowOpacity": 0,
                "shadowRadius": 0,
              }
            }
            testID="button-container"
          >
            <View
              accessibilityRole="button"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "overflow": "hidden",
                  },
                  {
                    "borderRadius": 20,
                  },
                ]
              }
              testID="button"
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
              >
                <Text
                  numberOfLines={1}
                  selectable={false}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "System",
                          "fontSize": 14,
                          "fontWeight": "500",
                          "letterSpacing": 0.1,
                          "lineHeight": 20,
                        },
                        [
                          {
                            "marginHorizontal": 16,
                            "marginVertical": 9,
                            "textAlign": "center",
                          },
                          false,
                          {
                            "marginHorizontal": 24,
                            "marginVertical": 10,
                          },
                          undefined,
                          false,
                          {
                            "color": "rgba(255, 255, 255, 1)",
                            "fontFamily": "System",
                            "fontSize": 14,
                            "fontWeight": "500",
                            "letterSpacing": 0.1,
                            "lineHeight": 20,
                          },
                          undefined,
                        ],
                      ],
                    ]
                  }
                  testID="button-text"
                >
                  Check the answer
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`<QuizzScreen /> renders correctly 2`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "paddingBottom": 64,
    }
  }
  style={
    {
      "flex": 1,
      "padding": 16,
    }
  }
>
  <View>
    <View
      style={
        {
          "marginBottom": 16,
        }
      }
    >
      <View>
        <Text
          style={
            {
              "fontSize": 16,
              "marginBottom": 16,
            }
          }
        >
          Quand est-ce que le disque est dit « mort » ? (plusieurs réponses possibles)
        </Text>
        <View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "marginBottom": 8,
                  "padding": 8,
                },
                {
                  "backgroundColor": "#cddff3",
                },
                {
                  "borderColor": "#6aa84f",
                  "borderWidth": 3,
                },
              ]
            }
          >
            <View
              accessibilityLiveRegion="polite"
              accessibilityRole="checkbox"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": false,
                  "disabled": true,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "overflow": "hidden",
                  },
                  {
                    "borderRadius": 18,
                    "padding": 6,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "opacity": 0,
                  }
                }
              >
                <Text />
              </View>
            </View>
            <Text
              style={
                {
                  "flex": 1,
                  "flexWrap": "wrap",
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              a
              . 
              Après le début d’un point, jusqu’à ce que le « pull » soit effectué
            </Text>
          </View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "marginBottom": 8,
                  "padding": 8,
                },
                {
                  "backgroundColor": "#F4C8A2",
                },
                {
                  "borderColor": "#6aa84f",
                  "borderWidth": 3,
                },
              ]
            }
          >
            <View
              accessibilityLiveRegion="polite"
              accessibilityRole="checkbox"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": false,
                  "disabled": true,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "overflow": "hidden",
                  },
                  {
                    "borderRadius": 18,
                    "padding": 6,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "opacity": 0,
                  }
                }
              >
                <Text />
              </View>
            </View>
            <Text
              style={
                {
                  "flex": 1,
                  "flexWrap": "wrap",
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              b
              . 
              Après le « pull » ou après un « turnover » quand le disque doit être amené à l’endroit où le point pivot doit être établi, jusqu’à ce qu’un pivot soit établi
            </Text>
          </View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "marginBottom": 8,
                  "padding": 8,
                },
                {
                  "backgroundColor": "#f8f99c",
                },
                {
                  "borderColor": "#6aa84f",
                  "borderWidth": 3,
                },
              ]
            }
          >
            <View
              accessibilityLiveRegion="polite"
              accessibilityRole="checkbox"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": false,
                  "disabled": true,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "overflow": "hidden",
                  },
                  {
                    "borderRadius": 18,
                    "padding": 6,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "opacity": 0,
                  }
                }
              >
                <Text />
              </View>
            </View>
            <Text
              style={
                {
                  "flex": 1,
                  "flexWrap": "wrap",
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              c
              . 
              Après un « call » qui arrête le jeu ou n’importe quel autre arrêt jusqu’à ce que le disque soit « checké »
            </Text>
          </View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "alignItems": "center",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "marginBottom": 8,
                  "padding": 8,
                },
                {
                  "backgroundColor": "#e5c9e5",
                },
                {
                  "borderColor": "#6aa84f",
                  "borderWidth": 3,
                },
              ]
            }
          >
            <View
              accessibilityLiveRegion="polite"
              accessibilityRole="checkbox"
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": false,
                  "disabled": true,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "overflow": "hidden",
                  },
                  {
                    "borderRadius": 18,
                    "padding": 6,
                  },
                ]
              }
            >
              <View
                style={
                  {
                    "opacity": 0,
                  }
                }
              >
                <Text />
              </View>
            </View>
            <Text
              style={
                {
                  "flex": 1,
                  "flexWrap": "wrap",
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              d
              . 
              Après que le disque touche le sol jusqu’à ce que la possession soit établie par l’équipe appropriée.
            </Text>
          </View>
        </View>
        <View
          style={
            {
              "backgroundColor": "#f2fcfc",
              "borderColor": "#2a9d9d",
              "borderRadius": 4,
              "borderWidth": 1,
              "padding": 16,
            }
          }
        >
          <Text
            style={
              {
                "color": "#e30000",
              }
            }
          >
            Wrong answer…
          </Text>
          <Text>
            Ces 4 situations correspondent à un disque mort.
          </Text>
          <View
            collapsable={false}
            style={
              {
                "alignSelf": "flex-end",
                "backgroundColor": "transparent",
                "borderRadius": 20,
                "flex": 1,
                "marginTop": 8,
                "shadowColor": "#000",
                "shadowOffset": {
                  "height": 0,
                  "width": 0,
                },
                "shadowOpacity": 0,
                "shadowRadius": 0,
              }
            }
            testID="button-container-outer-layer"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderColor": "rgba(121, 116, 126, 1)",
                  "borderRadius": 20,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "flex": 1,
                  "minWidth": 64,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                }
              }
              testID="button-container"
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": false,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  [
                    {
                      "overflow": "hidden",
                    },
                    {
                      "borderRadius": 19,
                    },
                  ]
                }
                testID="button"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    numberOfLines={1}
                    selectable={false}
                    style={
                      [
                        {
                          "textAlign": "left",
                        },
                        {
                          "color": "rgba(28, 27, 31, 1)",
                          "writingDirection": "ltr",
                        },
                        [
                          {
                            "fontFamily": "System",
                            "fontSize": 14,
                            "fontWeight": "500",
                            "letterSpacing": 0.1,
                            "lineHeight": 20,
                          },
                          [
                            {
                              "marginHorizontal": 16,
                              "marginVertical": 9,
                              "textAlign": "center",
                            },
                            false,
                            {
                              "marginHorizontal": 24,
                              "marginVertical": 10,
                            },
                            undefined,
                            false,
                            {
                              "color": "rgba(103, 80, 164, 1)",
                              "fontFamily": "System",
                              "fontSize": 14,
                              "fontWeight": "500",
                              "letterSpacing": 0.1,
                              "lineHeight": 20,
                            },
                            {
                              "fontSize": 14,
                            },
                          ],
                        ],
                      ]
                    }
                    testID="button-text"
                  >
                    See the rule
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "transparent",
                "borderRadius": 22,
                "height": 44,
                "margin": 6,
                "position": "absolute",
                "right": 0,
                "shadowColor": "#000",
                "shadowOffset": {
                  "height": 0,
                  "width": 0,
                },
                "shadowOpacity": 0,
                "shadowRadius": 0,
                "top": 0,
                "width": 44,
              }
            }
            testID="icon-button-container-outer-layer"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderColor": "rgba(121, 116, 126, 1)",
                  "borderRadius": 22,
                  "borderWidth": 0,
                  "elevation": 0,
                  "flex": 1,
                  "overflow": "hidden",
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                }
              }
              testID="icon-button-container"
            >
              <View
                accessibilityComponentType="button"
                accessibilityRole="button"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": false,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityTraits="button"
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                centered={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 6,
                    "left": 6,
                    "right": 6,
                    "top": 6,
                  }
                }
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  [
                    {
                      "overflow": "hidden",
                    },
                    [
                      {
                        "alignItems": "center",
                        "flexGrow": 1,
                        "justifyContent": "center",
                      },
                      undefined,
                    ],
                  ]
                }
                testID="icon-button"
              >
                <Text />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "rgba(103, 80, 164, 1)",
          "borderRadius": 20,
          "shadowColor": "#000",
          "shadowOffset": {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
      testID="button-container-outer-layer"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "rgba(103, 80, 164, 1)",
            "borderColor": "transparent",
            "borderRadius": 20,
            "borderStyle": "solid",
            "borderWidth": 0,
            "flex": undefined,
            "minWidth": 64,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="button-container"
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "overflow": "hidden",
              },
              {
                "borderRadius": 20,
              },
            ]
          }
          testID="button"
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                [
                  {
                    "textAlign": "left",
                  },
                  {
                    "color": "rgba(28, 27, 31, 1)",
                    "writingDirection": "ltr",
                  },
                  [
                    {
                      "fontFamily": "System",
                      "fontSize": 14,
                      "fontWeight": "500",
                      "letterSpacing": 0.1,
                      "lineHeight": 20,
                    },
                    [
                      {
                        "marginHorizontal": 16,
                        "marginVertical": 9,
                        "textAlign": "center",
                      },
                      false,
                      {
                        "marginHorizontal": 24,
                        "marginVertical": 10,
                      },
                      undefined,
                      false,
                      {
                        "color": "rgba(255, 255, 255, 1)",
                        "fontFamily": "System",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      undefined,
                    ],
                  ],
                ]
              }
              testID="button-text"
            >
              Next question
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`<QuizzScreen /> renders correctly 3`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "paddingBottom": 64,
    }
  }
  style={
    {
      "flex": 1,
      "padding": 16,
    }
  }
>
  <View>
    <View>
      <View
        style={
          {
            "marginBottom": 8,
            "marginTop": 16,
          }
        }
      >
        <Text
          style={
            {
              "fontSize": 26,
            }
          }
        >
          Review
        </Text>
      </View>
      <Text>
        0 correct answers out of 1 questions
      </Text>
      <Text>
        Our comment
      </Text>
      <View
        style={
          {
            "marginLeft": 16,
            "marginVertical": 8,
          }
        }
      >
        <Text>
          It's not great…
        </Text>
      </View>
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "transparent",
            "borderRadius": 20,
            "marginTop": 8,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="button-container-outer-layer"
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "transparent",
              "borderColor": "rgba(121, 116, 126, 1)",
              "borderRadius": 20,
              "borderStyle": "solid",
              "borderWidth": 1,
              "flex": undefined,
              "minWidth": 64,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 0,
            }
          }
          testID="button-container"
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "overflow": "hidden",
                },
                {
                  "borderRadius": 19,
                },
              ]
            }
            testID="button"
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  [
                    {
                      "textAlign": "left",
                    },
                    {
                      "color": "rgba(28, 27, 31, 1)",
                      "writingDirection": "ltr",
                    },
                    [
                      {
                        "fontFamily": "System",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      [
                        {
                          "marginHorizontal": 16,
                          "marginVertical": 9,
                          "textAlign": "center",
                        },
                        false,
                        {
                          "marginHorizontal": 24,
                          "marginVertical": 10,
                        },
                        undefined,
                        false,
                        {
                          "color": "rgba(103, 80, 164, 1)",
                          "fontFamily": "System",
                          "fontSize": 14,
                          "fontWeight": "500",
                          "letterSpacing": 0.1,
                          "lineHeight": 20,
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
                testID="button-text"
              >
                Share my result
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "rgba(103, 80, 164, 1)",
            "borderRadius": 20,
            "marginTop": 8,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="button-container-outer-layer"
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "rgba(103, 80, 164, 1)",
              "borderColor": "transparent",
              "borderRadius": 20,
              "borderStyle": "solid",
              "borderWidth": 0,
              "flex": undefined,
              "minWidth": 64,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 0,
            }
          }
          testID="button-container"
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "overflow": "hidden",
                },
                {
                  "borderRadius": 20,
                },
              ]
            }
            testID="button"
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  [
                    {
                      "textAlign": "left",
                    },
                    {
                      "color": "rgba(28, 27, 31, 1)",
                      "writingDirection": "ltr",
                    },
                    [
                      {
                        "fontFamily": "System",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      [
                        {
                          "marginHorizontal": 16,
                          "marginVertical": 9,
                          "textAlign": "center",
                        },
                        false,
                        {
                          "marginHorizontal": 24,
                          "marginVertical": 10,
                        },
                        undefined,
                        false,
                        {
                          "color": "rgba(255, 255, 255, 1)",
                          "fontFamily": "System",
                          "fontSize": 14,
                          "fontWeight": "500",
                          "letterSpacing": 0.1,
                          "lineHeight": 20,
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
                testID="button-text"
              >
                Back to the home screen
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          {
            "marginBottom": 8,
            "marginTop": 16,
          }
        }
      >
        <Text
          style={
            {
              "fontSize": 26,
            }
          }
        >
          Detail of the errors
        </Text>
      </View>
      <View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "borderBottomColor": "#2a9d9d",
              "borderBottomWidth": 0.5,
              "flexDirection": "row",
              "marginTop": 8,
              "opacity": 1,
              "paddingVertical": 8,
            }
          }
        >
          <Text />
          <Text
            style={
              {
                "flex": 1,
                "fontSize": 14,
                "marginLeft": 8,
              }
            }
          >
            Quand est-ce que le disque est dit « mort » ? (plusieurs réponses possibles)
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`<QuizzScreen /> renders correctly with no questions 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "paddingBottom": 64,
    }
  }
  style={
    {
      "flex": 1,
      "padding": 16,
    }
  }
>
  <View>
    <Text>
      We have no question matching your criteria.
    </Text>
  </View>
</RCTScrollView>
`;
